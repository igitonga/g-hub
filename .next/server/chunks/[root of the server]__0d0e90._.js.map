{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 33, "column": 0}, "map": {"version":3,"sources":["file:///Users/igitonga/Development/graphql-nodejs-react/src/pages/api/schema.ts"],"sourcesContent":["export const typeDefs = `#graphql \n    type Game {\n        id: ID!\n        title: String!\n        description: String!\n        imageUrl: String!\n        platform: [String!]!\n        reviews: [Review!]\n    }\n    type Review {\n        id: ID!\n        rating: Int!\n        content: String!\n        game_id: String!\n        author_id: String!\n        game: Game!\n        author: Author!\n    }\n    type Author {\n        id: ID\n        name: String!\n        verified: Boolean!\n        reviews: [Review!]\n    }\n    type Query {\n        games: [Game]\n        game(id: ID!): Game\n        authors: [Author]\n        author(id: ID!): Author\n        reviews: [Review]\n        review(id: ID!): Review\n    }\n    type Mutation {\n        addGame(game: AddGameInput): Game\n        deleteGame(id: ID!): Game\n        updateGame(id: ID!, game: UpdateGameInput): Game\n\n        addAuthor(author: AddAuthorInput): Author\n        updateAuthor(id: ID!, author: UpdateAuthorInput): Author\n        deleteAuthor(id: ID!): Author\n\n        addReview(review: AddReviewInput): Review\n        updateReview(id: ID!, review: UpdateReviewInput): Review\n        deleteReview(id: ID!): Review\n    }\n    input AddGameInput {\n        title: String!\n        description: String!\n        imageUrl: String!\n        platform: [String!]!\n    }\n    input UpdateGameInput {\n        title: String\n        platform: [String!]\n    }\n    input AddAuthorInput {\n        name: String!\n        verified: Boolean!\n    }\n    input UpdateAuthorInput {\n        name: String\n        verified: Boolean\n    }\n    input AddReviewInput {\n        rating: Int!\n        content: String\n        game_id: String!\n        author_id: String!\n    }\n    input UpdateReviewInput {\n        rating: Int\n        content: String\n    }\n`"],"names":[],"mappings":";;;AAAO,MAAM,WAAW,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyEzB,CAAC"}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 116, "column": 0}, "map": {"version":3,"sources":["file:///Users/igitonga/Development/graphql-nodejs-react/src/pages/api/graphql.ts"],"sourcesContent":["import { ApolloServer } from \"@apollo/server\";\nimport { startServerAndCreateNextHandler } from \"@as-integrations/next\";\nimport { NextRequest } from \"next/server\";\nimport client from \"@/lib/mongodb\";\nimport { ObjectId } from \"mongodb\";\nimport { typeDefs } from \"./schema\";\n\n// let db = null;\n// try {\n//     await client.connect();\n//     console.log('Connected to database');\n\n//     db = client.db(process.env.DB_NAME);\n// } catch (error) {\n//     console.error(`Database connection error: ${error}`);\n// }\n\n// let gamesCollection: any;\n// let authorsCollection: any;\n// let reviewsCollection: any;\n\n// if(db !== null){\n//     gamesCollection = db.collection('games');\n//     authorsCollection = db.collection('authors');\n//     reviewsCollection = db.collection('reviews');\n// }\n\nconst resolvers = {\n    // Query: {\n    //     async games() { \n    //         const allGames = await gamesCollection.find({}).toArray();\n\n    //         return allGames;\n    //     },\n    //     async game(_: unknown, args: any) {\n    //         const game = await gamesCollection.findOne({ _id: new ObjectId(args.id) }); \n            \n    //         return game;\n    //     },\n    //     async authors() {\n    //         const allAuthors = await authorsCollection.find({}).toArray();\n\n    //         return allAuthors;\n    //     },\n    //     async author(_, args) {\n    //         const author = await authorsCollection.findOne({ _id: new ObjectId(args.id) }); \n\n    //         return author;\n    //     },\n    //     async reviews() {\n    //         const allReviews = await reviewsCollection.find({}).toArray();\n\n    //         return allReviews;\n    //     },\n    //     async review(_, args) {\n    //         const review = await reviewsCollection.findOne({ _id: new ObjectId(args.id) }); \n\n    //         return review;\n    //     }\n    // },\n    // Game: {\n    //     id: (parent) => parent._id.toString(),\n    //     reviews(parent) {\n    //         return reviewsCollection.find({game_id: parent._id.toString()}).toArray();\n    //     }\n    // },\n    // Author: {\n    //     reviews(parent) {\n    //         return reviewsCollection.find({author_id: parent._id.toString()}).toArray();\n    //     }\n    // },\n    // Review : {\n    //     author(parent) {\n    //         return authorsCollection.findOne({_id: new ObjectId(parent.author_id)});\n    //     },\n    //     game(parent) {\n    //         return gamesCollection.findOne({_id: new ObjectId(parent.game_id)});\n    //     }\n    // },\n    // Mutation: {\n    //     async addGame(_, args) {\n    //         let newGame = {...args.game};\n    //         await gamesCollection.insertOne(newGame);\n\n    //         return newGame;\n    //     },\n    //     async deleteGame(_, args) {\n    //         let deleteGame = await gamesCollection.deleteOne({_id: new ObjectId(args.id)});\n\n    //         return deleteGame;\n    //     },\n    //     async updateGame(_, args) {\n    //         let game = await gamesCollection.updateOne({_id: new ObjectId(args.id)},{$set: {...args.game}});\n\n    //         return game;\n    //     },\n\n    //     async addAuthor(_, args) {\n    //         let newAuthor = {...args.author}\n    //         await authorsCollection.insertOne(newAuthor);\n\n    //         return newAuthor;\n    //     },\n    //     async updateAuthor(_, args) {\n    //         let author = await authorsCollection.updateOne({_id: new ObjectId(args.id)}, {$set: {...args.author}});\n\n    //         return author;\n    //     },\n    //     async deleteAuthor(_, args) {\n    //         let author = await authorsCollection.deleteOne({_id: new ObjectId(args.id)})\n\n    //         return author;\n    //     },\n\n    //     async addReview(_, args) {\n    //         let newReview = {...args.review};\n    //         await reviewsCollection.insertOne(newReview);\n\n    //         return newReview;\n    //     },\n    //     async updateReview(_, args) {\n    //         let review = await reviewsCollection.updateOne({_id: new ObjectId(args.id)}, {$set: {...args.review}});\n\n    //         return review;\n    //     },\n    //     async deleteReview(_, args) {\n    //         let review = await reviewsCollection.deleteOne({_id: new ObjectId(args.id)})\n\n    //         return review;\n    //     },        \n    // }\n    Query: {\n        hello: () => \"Hello world!\",\n    },\n}\n\nconst server = new ApolloServer({\n    typeDefs,\n    resolvers,\n});\n\nconst handler = startServerAndCreateNextHandler<NextRequest>(server, {\n    context: async req => ({ req }),\n});\n\nexport { handler as GET, handler as POST };\n"],"names":[],"mappings":";;;;AAAA;AACA;AAIA;;;;;;;;AAEA,iBAAiB;AACjB,QAAQ;AACR,8BAA8B;AAC9B,4CAA4C;AAE5C,2CAA2C;AAC3C,oBAAoB;AACpB,4DAA4D;AAC5D,IAAI;AAEJ,4BAA4B;AAC5B,8BAA8B;AAC9B,8BAA8B;AAE9B,mBAAmB;AACnB,gDAAgD;AAChD,oDAAoD;AACpD,oDAAoD;AACpD,IAAI;AAEJ,MAAM,YAAY;IACd,WAAW;IACX,uBAAuB;IACvB,qEAAqE;IAErE,2BAA2B;IAC3B,SAAS;IACT,0CAA0C;IAC1C,uFAAuF;IAEvF,uBAAuB;IACvB,SAAS;IACT,wBAAwB;IACxB,yEAAyE;IAEzE,6BAA6B;IAC7B,SAAS;IACT,8BAA8B;IAC9B,2FAA2F;IAE3F,yBAAyB;IACzB,SAAS;IACT,wBAAwB;IACxB,yEAAyE;IAEzE,6BAA6B;IAC7B,SAAS;IACT,8BAA8B;IAC9B,2FAA2F;IAE3F,yBAAyB;IACzB,QAAQ;IACR,KAAK;IACL,UAAU;IACV,6CAA6C;IAC7C,wBAAwB;IACxB,qFAAqF;IACrF,QAAQ;IACR,KAAK;IACL,YAAY;IACZ,wBAAwB;IACxB,uFAAuF;IACvF,QAAQ;IACR,KAAK;IACL,aAAa;IACb,uBAAuB;IACvB,mFAAmF;IACnF,SAAS;IACT,qBAAqB;IACrB,+EAA+E;IAC/E,QAAQ;IACR,KAAK;IACL,cAAc;IACd,+BAA+B;IAC/B,wCAAwC;IACxC,oDAAoD;IAEpD,0BAA0B;IAC1B,SAAS;IACT,kCAAkC;IAClC,0FAA0F;IAE1F,6BAA6B;IAC7B,SAAS;IACT,kCAAkC;IAClC,2GAA2G;IAE3G,uBAAuB;IACvB,SAAS;IAET,iCAAiC;IACjC,2CAA2C;IAC3C,wDAAwD;IAExD,4BAA4B;IAC5B,SAAS;IACT,oCAAoC;IACpC,kHAAkH;IAElH,yBAAyB;IACzB,SAAS;IACT,oCAAoC;IACpC,uFAAuF;IAEvF,yBAAyB;IACzB,SAAS;IAET,iCAAiC;IACjC,4CAA4C;IAC5C,wDAAwD;IAExD,4BAA4B;IAC5B,SAAS;IACT,oCAAoC;IACpC,kHAAkH;IAElH,yBAAyB;IACzB,SAAS;IACT,oCAAoC;IACpC,uFAAuF;IAEvF,yBAAyB;IACzB,iBAAiB;IACjB,IAAI;IACJ,OAAO;QACH,OAAO,IAAM;IACjB;AACJ;AAEA,MAAM,SAAS,IAAI,oIAAA,CAAA,eAAY,CAAC;IAC5B,UAAA,sHAAA,CAAA,WAAQ;IACR;AACJ;AAEA,MAAM,UAAU,CAAA,GAAA,iJAAA,CAAA,kCAA+B,AAAD,EAAe,QAAQ;IACjE,SAAS,OAAM,MAAO,CAAC;YAAE;QAAI,CAAC;AAClC"}},
    {"offset": {"line": 247, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 253, "column": 0}, "map": {"version":3,"sources":["file:///Users/igitonga/Development/graphql-nodejs-react/node_modules/next/dist/src/server/route-modules/pages-api/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/pages-api/module.js')\n} else {\n  if (process.env.NODE_ENV === 'development') {\n    module.exports = require('next/dist/compiled/next-server/pages-api.runtime.dev.js')\n  } else if (process.env.TURBOPACK) {\n    module.exports = require('next/dist/compiled/next-server/pages-api-turbo.runtime.prod.js')\n  } else {\n    module.exports = require('next/dist/compiled/next-server/pages-api.runtime.prod.js')\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","NODE_ENV","TURBOPACK"],"mappings":"AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,QAAQ,KAAK,WAAe;QAC1CH,OAAOC,OAAO,GAAGC,QAAQ;IAC3B,OAAO,IAAIL,QAAQC,GAAG,CAACM,SAAS,EAAE;;IAIlC;AACF","ignoreList":[0]}},
    {"offset": {"line": 262, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 268, "column": 0}, "map": {"version":3,"sources":["file:///Users/igitonga/Development/graphql-nodejs-react/node_modules/next/dist/src/server/route-kind.ts"],"sourcesContent":["export const enum RouteKind {\n  /**\n   * `PAGES` represents all the React pages that are under `pages/`.\n   */\n  PAGES = 'PAGES',\n  /**\n   * `PAGES_API` represents all the API routes under `pages/api/`.\n   */\n  PAGES_API = 'PAGES_API',\n  /**\n   * `APP_PAGE` represents all the React pages that are under `app/` with the\n   * filename of `page.{j,t}s{,x}`.\n   */\n  APP_PAGE = 'APP_PAGE',\n  /**\n   * `APP_ROUTE` represents all the API routes and metadata routes that are under `app/` with the\n   * filename of `route.{j,t}s{,x}`.\n   */\n  APP_ROUTE = 'APP_ROUTE',\n\n  /**\n   * `IMAGE` represents all the images that are generated by `next/image`.\n   */\n  IMAGE = 'IMAGE',\n}\n"],"names":["RouteKind"],"mappings":";;;AAAO,IAAWA,YAAAA,WAAAA,GAAAA,SAAAA,SAAAA;IAChB;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;IAED;;GAEC,GAAA,SAAA,CAAA,YAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,WAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,YAAA,GAAA;IAGD;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;WAtBeA;MAwBjB","ignoreList":[0]}},
    {"offset": {"line": 291, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 297, "column": 0}, "map": {"version":3,"sources":["file:///Users/igitonga/Development/graphql-nodejs-react/node_modules/next/dist/src/build/templates/helpers.ts"],"sourcesContent":["/**\n * Hoists a name from a module or promised module.\n *\n * @param module the module to hoist the name from\n * @param name the name to hoist\n * @returns the value on the module (or promised module)\n */\nexport function hoist(module: any, name: string) {\n  // If the name is available in the module, return it.\n  if (name in module) {\n    return module[name]\n  }\n\n  // If a property called `then` exists, assume it's a promise and\n  // return a promise that resolves to the name.\n  if ('then' in module && typeof module.then === 'function') {\n    return module.then((mod: any) => hoist(mod, name))\n  }\n\n  // If we're trying to hoise the default export, and the module is a function,\n  // return the module itself.\n  if (typeof module === 'function' && name === 'default') {\n    return module\n  }\n\n  // Otherwise, return undefined.\n  return undefined\n}\n"],"names":["hoist","module","name","then","mod","undefined"],"mappings":"AAAA;;;;;;CAMC,GACD;;;AAAO,SAASA,MAAMC,MAAW,EAAEC,IAAY;IAC7C,qDAAqD;IACrD,IAAIA,QAAQD,QAAQ;QAClB,OAAOA,MAAM,CAACC,KAAK;IACrB;IAEA,gEAAgE;IAChE,8CAA8C;IAC9C,IAAI,UAAUD,UAAU,OAAOA,OAAOE,IAAI,KAAK,YAAY;QACzD,OAAOF,OAAOE,IAAI,CAAC,CAACC,MAAaJ,MAAMI,KAAKF;IAC9C;IAEA,6EAA6E;IAC7E,4BAA4B;IAC5B,IAAI,OAAOD,WAAW,cAAcC,SAAS,WAAW;QACtD,OAAOD;IACT;IAEA,+BAA+B;IAC/B,OAAOI;AACT","ignoreList":[0]}},
    {"offset": {"line": 324, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 330, "column": 0}, "map": {"version":3,"sources":["file:///Users/igitonga/Development/graphql-nodejs-react/node_modules/next/dist/src/build/templates/pages-api.ts"],"sourcesContent":["import { PagesAPIRouteModule } from '../../server/route-modules/pages-api/module.compiled'\nimport { RouteKind } from '../../server/route-kind'\n\nimport { hoist } from './helpers'\n\n// Import the userland code.\nimport * as userland from 'VAR_USERLAND'\n\n// Re-export the handler (should be the default export).\nexport default hoist(userland, 'default')\n\n// Re-export config.\nexport const config = hoist(userland, 'config')\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new PagesAPIRouteModule({\n  definition: {\n    kind: RouteKind.PAGES_API,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n  },\n  userland,\n})\n"],"names":["PagesAPIRouteModule","RouteKind","hoist","userland","config","routeModule","definition","kind","PAGES_API","page","pathname","bundlePath","filename"],"mappings":";;;;;AAAA,SAASA,mBAAmB,QAAQ,uDAAsD;AAC1F,SAASC,SAAS,QAAQ,0BAAyB;AAEnD,SAASC,KAAK,QAAQ,YAAW;AAEjC,4BAA4B;AAC5B,YAAYC,cAAc,eAAc;;;;;;;;;yMAGzBD,QAAAA,EAAMC,yHAAU,WAAU;AAGlC,MAAMC,2KAASF,QAAAA,EAAMC,yHAAU,UAAS;AAGxC,MAAME,cAAc,qMAAIL,sBAAAA,CAAoB;IACjDM,YAAY;QACVC,8JAAMN,YAAAA,CAAUO,SAAS;QACzBC,MAAM;QACNC,UAAU;QACV,2CAA2C;QAC3CC,YAAY;QACZC,UAAU;IACZ;cACAT;AACF,GAAE","ignoreList":[0]}},
    {"offset": {"line": 361, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}