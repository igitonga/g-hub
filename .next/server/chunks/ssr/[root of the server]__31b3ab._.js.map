{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///Users/igitonga/Development/graphql-nodejs-react/src/pages/_document.tsx"],"sourcesContent":["import { Html, Head, Main, NextScript } from \"next/document\";\n\nexport default function Document() {\n  return (\n    <Html lang=\"en\">\n      <Head />\n      <body className=\"antialiased\">\n        <Main />\n        <NextScript />\n      </body>\n    </Html>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAEe,SAAS;IACtB,qBACE,qKAAC,yHAAA,CAAA,OAAI;QAAC,MAAK;;0BACT,qKAAC,yHAAA,CAAA,OAAI;;;;;0BACL,qKAAC;gBAAK,WAAU;;kCACd,qKAAC,yHAAA,CAAA,OAAI;;;;;kCACL,qKAAC,yHAAA,CAAA,aAAU;;;;;;;;;;;;;;;;;AAInB"}},
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file:///Users/igitonga/Development/graphql-nodejs-react/src/lib/apolloClient.ts"],"sourcesContent":["import { ApolloClient, InMemoryCache, HttpLink } from \"@apollo/client\";\n\nconst httpLink = new HttpLink({\n    uri: 'http://localhost:3000/api/graphql',\n    credentials: 'same-origin',\n});\n\nconst apolloClient = new ApolloClient({\n    link: httpLink,  \n    cache: new InMemoryCache()\n});\n\nexport default apolloClient;\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,WAAW,IAAI,6HAAA,CAAA,WAAQ,CAAC;IAC1B,KAAK;IACL,aAAa;AACjB;AAEA,MAAM,eAAe,IAAI,6HAAA,CAAA,eAAY,CAAC;IAClC,MAAM;IACN,OAAO,IAAI,6HAAA,CAAA,gBAAa;AAC5B;uCAEe"}},
    {"offset": {"line": 125, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 131, "column": 0}, "map": {"version":3,"sources":["file:///Users/igitonga/Development/graphql-nodejs-react/src/lib/apolloProvider.tsx"],"sourcesContent":["import { FC, ReactNode } from \"react\";\nimport { ApolloProvider } from \"@apollo/client\";\nimport client from \"./apolloClient\";\n\ninterface ApolloProviderWrapperProps {\n    children: ReactNode;\n}\n\nconst ApolloProviderWrapper: FC<ApolloProviderWrapperProps> = ({ children }) => {\n    return(\n        <ApolloProvider client={client}>\n            {children}\n        </ApolloProvider>\n    )\n}\n\nexport default ApolloProviderWrapper;"],"names":[],"mappings":";;;;AACA;AACA;;;;AAMA,MAAM,wBAAwD,CAAC,EAAE,QAAQ,EAAE;IACvE,qBACI,qKAAC,6HAAA,CAAA,iBAAc;QAAC,QAAQ,mHAAA,CAAA,UAAM;kBACzB;;;;;;AAGb;uCAEe"}},
    {"offset": {"line": 151, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 157, "column": 0}, "map": {"version":3,"sources":["file:///Users/igitonga/Development/graphql-nodejs-react/src/pages/_app.tsx"],"sourcesContent":["import \"@/styles/globals.css\";\nimport type { AppProps } from \"next/app\";\nimport ApolloProviderWrapper from \"@/lib/apolloProvider\";\n\nexport default function App({ Component, pageProps }: AppProps) {\n  return (\n    <ApolloProviderWrapper>\n      <Component {...pageProps} />\n    </ApolloProviderWrapper>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;;;;AAEe,SAAS,IAAI,EAAE,SAAS,EAAE,SAAS,EAAY;IAC5D,qBACE,qKAAC,sHAAA,CAAA,UAAqB;kBACpB,cAAA,qKAAC;YAAW,GAAG,SAAS;;;;;;;;;;;AAG9B"}},
    {"offset": {"line": 180, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 186, "column": 0}, "map": {"version":3,"sources":["file:///Users/igitonga/Development/graphql-nodejs-react/src/lib/queries.ts"],"sourcesContent":["import { gql } from \"@apollo/client\";\n\nexport const LIST_GAMES = gql`\n  query GetGames {\n    games {\n      id,\n      title,\n      description,\n      imageUrl,\n      reviews {\n        rating\n      }\n    }\n  }\n`;\n\nexport const ADD_GAME = gql`\n    mutation AddGame($game: AddGameInput!) {\n        addGame(game: $game) {\n            title,\n            platform\n        }\n    }\n`;\n\nexport const GET_GAME = gql`\n  query GetGame($gameId: ID!) {\n    game(id: $gameId) {\n      title,\n      platform,\n      description,\n      imageUrl\n    }\n  }\n`"],"names":[],"mappings":";;;;;AAAA;;AAEO,MAAM,aAAa,6HAAA,CAAA,MAAG,CAAC;;;;;;;;;;;;AAY9B,CAAC;AAEM,MAAM,WAAW,6HAAA,CAAA,MAAG,CAAC;;;;;;;AAO5B,CAAC;AAEM,MAAM,WAAW,6HAAA,CAAA,MAAG,CAAC;;;;;;;;;AAS5B,CAAC"}},
    {"offset": {"line": 224, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 230, "column": 0}, "map": {"version":3,"sources":["file:///Users/igitonga/Development/graphql-nodejs-react/src/pages/index.tsx"],"sourcesContent":["import { gql, useQuery } from \"@apollo/client\";\nimport { LIST_GAMES } from \"@/lib/queries\";\n\ninterface Review {\n  rating: number; // Adjust the type as necessary\n}\n\ninterface Game {\n  id: string;\n  title: string;\n  reviews: Review[];\n  imageUrl: string;\n  description: string;\n}\n\ninterface GamesData {\n  games: Game[]\n}\n\nexport default function Home() {\n  const {data, loading, error} = useQuery<GamesData>(LIST_GAMES);\n\n  if(loading)\n    return <p>loading..</p>\n  if(error)\n    return <p>{error.message}</p>  \n\n  if(data){\n    return (\n      <div>\n        {data.games.map(game => <p>{game.title}</p>)}\n      </div>\n    );\n  }\n\n}\n\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAkBe,SAAS;IACtB,MAAM,EAAC,IAAI,EAAE,OAAO,EAAE,KAAK,EAAC,GAAG,CAAA,GAAA,6HAAA,CAAA,WAAQ,AAAD,EAAa,8GAAA,CAAA,aAAU;IAE7D,IAAG,SACD,qBAAO,qKAAC;kBAAE;;;;;;IACZ,IAAG,OACD,qBAAO,qKAAC;kBAAG,MAAM,OAAO;;;;;;IAE1B,IAAG,MAAK;QACN,qBACE,qKAAC;sBACE,KAAK,KAAK,CAAC,GAAG,CAAC,CAAA,qBAAQ,qKAAC;8BAAG,KAAK,KAAK;;;;;;;;;;;IAG5C;AAEF"}},
    {"offset": {"line": 271, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}